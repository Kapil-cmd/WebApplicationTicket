@model Common.ViewModels.Role.EditRole

 <link rel="stylesheet" href="~/css/rect2.css" asp-append-version="true" />
@{
    ViewData["Title"] = "ManageRole";
}

<h1>ManageRole</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ManageRole">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div><br />
            <div class="custom-control custom-checkbox">
                <div class="form-group">
                <h3>Choose Permission :</h3><br />
                @for (int i = 0; i < Model.ListPermission.Count(); i++)
                {
                    <input id="@Model.ListPermission[i].Id" asp-for="@Model.ListPermission[i].IsPermitted" type="checkbox" class="custom-control-input"/>
                    <input asp-for="@Model.ListPermission[i].Id" type="hidden" />
                    <label for="@Model.ListPermission[i].Id" class="custom-control-label">@Model.ListPermission[i].MenuName</label>
                }
                </div>
            </div><br /><br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-outline-dark">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
